name=unlist(lapply(strsplit(as.character(name_age), "\\,"), "[", 1)),
age=unlist(lapply(strsplit(as.character(name_age), "\\, "), "[", 2)),
first_name=unlist(lapply(strsplit(as.character(name), " "), "[", 1)),
#throw out some cruft from some strings
gender=substr(gender, 1, 1),
race=substr(race, 1, 1),
date=gsub("\\([^)]+) ", "", date),
#make a real date object
date=mdy(date),
age=as.numeric(substr(age, 1, 2)),#centegenerians will be turned into teens
gender=as.factor(gender),
race=as.factor(race),
first_name=as.factor(capitalize(tolower(first_name))),
decade=age %% 10)
data <- killed_by_police %>% html_table(header=TRUE) %>%
.[[1]] %>%
setNames(columns) %>%
mutate(#first thing we have to do is split up columns w/multiple values
gender=unlist(lapply(strsplit(as.character(gender_race), "\\/"), "[", 1)),
race=unlist(lapply(strsplit(as.character(gender_race), "\\/"), "[", 2)),
name=unlist(lapply(strsplit(as.character(name_age), "\\,"), "[", 1)),
age=unlist(lapply(strsplit(as.character(name_age), "\\, "), "[", 2)),
first_name=unlist(lapply(strsplit(as.character(name), " "), "[", 1)),
#throw out some cruft from some strings
gender=substr(gender, 1, 1),
race=substr(race, 1, 1),
date=gsub("\\([^)]+) ", "", date),
#make a real date object
date=mdy(date),
age=as.numeric(substr(age, 1, 2)),#centegenerians will be turned into teens
gender=as.factor(gender),
race=as.factor(race),
first_name=as.factor(capitalize(tolower(first_name))),
decade=as.factor(age %% 10))
summary(data$decade)
ggplot(data, aes(x=age, y=gender)) + geom_histogram()
ggplot(data, aes(x=age, y=gender)) + geom_histogram(stat="bin")
ggplot(data, aes(x=age)) + geom_histogram(stat="bin")
ggplot(data, aes(x=age)) + geom_histogram(stat="bin") + facet_wrap(~ race)
table(data$first_name, data$race)
ggplot(data, aes(x=date)) + geom_histogram()
data %<>% filter(date > ymd("2014/01/01"))
data <- data %>% filter(date > ymd("2014/01/01"))
View(data)
ggplot(data, aes(x=date)) + geom_histogram()
ggplot(data, aes(x=date)) + geom_line()
ggplot(data, aes(x=date)) + geom_density()
ggplot(data, aes(x=date)) + geom_density() + facet_wrap(~ race)
ggplot(data, aes(x=date)) + geom_density() + facet_wrap(~ race)
View(data)
data <- killed_by_police %>% html_table(header=TRUE) %>%
.[[1]] %>%
setNames(columns) %>%
mutate(#first thing we have to do is split up columns w/multiple values
gender=unlist(lapply(strsplit(as.character(gender_race), "\\/"), "[", 1)),
race=unlist(lapply(strsplit(as.character(gender_race), "\\/"), "[", 2)),
name=unlist(lapply(strsplit(as.character(name_age), "\\,"), "[", 1)),
age=unlist(lapply(strsplit(as.character(name_age), "\\, "), "[", 2)),
first_name=unlist(lapply(strsplit(as.character(name), " "), "[", 1)),
#throw out some cruft from some strings
gender=substr(gender, 1, 1),
race=substr(race, 1, 1),
date=gsub("\\([^)]+) ", "", date),
#make a real date object
date=mdy(date),
age=as.numeric(substr(age, 1, 2)),#centegenerians will be turned into teens
gender=as.factor(gender),
race=as.factor(race),
first_name=as.factor(capitalize(tolower(first_name))),
decade=as.factor(age %% 10),
state=as.factor(state))
ggplot(data, aes(x=date)) + geom_density() + facet_wrap(~ state)
ggplot(data, aes(x=date)) + geom_density() + facet_wrap(~ state, scales="free")
ggplot(data, aes(x=date)) +  geom_histogram(colour="black", fill="white") + geom_density() + facet_wrap(~ state, scales="free")
ggplot(data, aes(x=date)) + geom_histogram(colour="black", fill="white") + geom_density() + facet_wrap(~ state, scales="free")
ggplot(data, aes(x=date)) + geom_histogram() + geom_density() + facet_wrap(~ state, scales="free")
ggplot(data, aes(x=date)) + geom_histogram(stat="bin") + geom_density() + facet_wrap(~ state, scales="free")
ggplot(data, aes(x=date)) + geom_histogram(stat="bin")
ggplot(data, aes(x=date)) + geom_histogram(stat="bin") + facet_wrap(~ state, scales="free")
?facet_wrap
table(data$state)
data <- killed_by_police %>% html_table(header=TRUE) %>%
.[[1]] %>%
setNames(columns) %>%
mutate(#first thing we have to do is split up columns w/multiple values
gender=unlist(lapply(strsplit(as.character(gender_race), "\\/"), "[", 1)),
race=unlist(lapply(strsplit(as.character(gender_race), "\\/"), "[", 2)),
name=unlist(lapply(strsplit(as.character(name_age), "\\,"), "[", 1)),
age=unlist(lapply(strsplit(as.character(name_age), "\\, "), "[", 2)),
first_name=unlist(lapply(strsplit(as.character(name), " "), "[", 1)),
#throw out some cruft from some strings
gender=substr(gender, 1, 1),
race=substr(race, 1, 1),
date=gsub("\\([^)]+) ", "", date),
#make a real date object
date=mdy(date),
age=as.numeric(substr(age, 1, 2)),#centegenerians will be turned into teens
gender=as.factor(gender),
race=as.factor(race),
first_name=as.factor(capitalize(tolower(first_name))),
decade=as.factor(age %% 10),
state=as.factor(toupper(state)))
data <- data %>% filter(date > ymd("2014/01/01"))
ggplot(data, aes(x=date)) + geom_histogram(stat="bin") + facet_wrap(~ state, scales="free")
table(data$state)
summary(data$state)
summary(data)
ggplot(data, aes(x=state)) + geom_histogram()
View(data)
str(table(data$first_name))
?write.csv
write.csv(data, "data/cleaned.csv")
write.csv(data, "data/cleaned.csv", row.names=FALSE)
ggplot(data, aes(x=state)) + geom_histogram()
View(data)
ggplot(data, aes(x=gender)) + geom_hist(stat="bin") + facet_wrap(~state)
ggplot(data, aes(x=gender)) + geom_histogram(stat="bin") + facet_wrap(~state)
ggplot(data, aes(x=gender)) + geom_histogram(stat="bin") + facet_wrap(~state, scales="free")
ggplot(data, aes(x=gender)) + geom_histogram(stat="bin") + facet_wrap(~state, scales="free")
ggplot(data, aes(x=gender)) + geom_histogram(stat="bin") + facet_wrap(~state, scales="free") + scale_x_discrete(drop=FALSE)
data %>% group_by(state) %>% summarise(total=n())
data %>% group_by(state, race) %>% summarise(total=n())
ggplot(data, aes(x=gender)) + geom_histogram(stat="bin", na.rm=TRUE) + facet_wrap(~state, scales="free") + scale_x_discrete(drop=FALSE)
state_population <- read.csv("~/play/killed_by_cops/data/state_population.csv")
View(state_population)
state_population[! state_population %in% state.name,]
state.name
state_population[! state_population$NAME %in% state.name,]
state_population[! state_population$NAME %in% state.name,]
state_population <- read.csv("data/state_population.csv") %>%
filter(NAME %in% state.name)
View(state_population)
state.abb[match(state_population$NAME, state.name)]
state_population <- read.csv("data/state_population.csv") %>%
filter(NAME %in% state.name) %>%
mutate(state=state.abb[match(NAME, state.name)])
t <- data %>% join(state_population)
t <- data %>% inner_join(state_population)
data %>% group_by(state) %>% mutate(total=n()) %>% inner_join(state_population)
data %>% group_by(state) %>% summarise(total=n()) %>% inner_join(state_population)
data %>% group_by(state) %>% summarise(total=n()) %>% inner_join(state_population) %>% select(state, total)
data %>% group_by(state) %>% summarise(total=n()) %>% inner_join(state_population) %>% select(state, total, POPESTIMATE2014, POPEST18PLUS2014)
data %>% group_by(state) %>% summarise(total=n(), mean_age=mean(age)) %>% inner_join(state_population) %>% select(state, mean_age, total, POPESTIMATE2014, POPEST18PLUS2014)
data %>% group_by(state) %>% summarise(total=n(), mean_age=mean(age, na.rm=TRUE)) %>% inner_join(state_population) %>% select(state, mean_age, total, POPESTIMATE2014, POPEST18PLUS2014)
round
round(3.5)
data %>% group_by(state) %>% summarise(total=n(), mean_age=round(mean(age, na.rm=TRUE))) %>% inner_join(state_population) %>% select(state, mean_age, total, POPESTIMATE2014, POPEST18PLUS2014)
data %>% group_by(state) %>% summarise(total=n(), mean_age=round(mean(age, na.rm=TRUE))) %>% inner_join(state_population) %>% select(state, mean_age, total, POPESTIMATE2014, POPEST18PLUS2014) %>% arrange_mean_age
data %>% group_by(state) %>% summarise(total=n(), mean_age=round(mean(age, na.rm=TRUE))) %>% inner_join(state_population) %>% select(state, mean_age, total, POPESTIMATE2014, POPEST18PLUS2014) %>% arrange(mean_age)
data %>% group_by(state) %>% summarise(total=n(), mean_age=round(mean(age, na.rm=TRUE))) %>% inner_join(state_population) %>% select(state, mean_age, total, POPESTIMATE2014, POPEST18PLUS2014) %>% arrange(mean_age)
data %>% group_by(state) %>% summarise(total=n(), mean_age=round(mean(age, na.rm=TRUE))) %>% inner_join(state_population) %>% select(state, mean_age, total, POPESTIMATE2014, POPEST18PLUS2014) %>% mutate(pctg=round((total/POPESTIMATE2014)*100)) %>% arrange(mean_age)
data %>% group_by(state) %>% summarise(total=n(), mean_age=round(mean(age, na.rm=TRUE))) %>% inner_join(state_population) %>% select(state, mean_age, total, POPESTIMATE2014, POPEST18PLUS2014) %>% mutate(pctg=(total/POPESTIMATE2014)*100) %>% arrange(mean_age)
data %>% group_by(state) %>% summarise(total=n(), mean_age=round(mean(age, na.rm=TRUE))) %>% inner_join(state_population) %>% select(state, mean_age, total, POPESTIMATE2014, POPEST18PLUS2014) %>% mutate(pctg=(total/POPESTIMATE2014)*100) %>% arrange(pctrg)
data %>% group_by(state) %>% summarise(total=n(), mean_age=round(mean(age, na.rm=TRUE))) %>% inner_join(state_population) %>% select(state, mean_age, total, POPESTIMATE2014, POPEST18PLUS2014) %>% mutate(pctg=(total/POPESTIMATE2014)*100) %>% arrange(pctg)
summaries_by_state <- data %>% group_by(state) %>%
summarise(total=n(),
mean_age=round(mean(age, na.rm=TRUE))) %>%
inner_join(state_population) %>%
select(state, mean_age, total, POPESTIMATE2014,
POPEST18PLUS2014) %>%
mutate(pctg=(total/POPESTIMATE2014)*100) %>% arrange(pctg)
?inner_join
summaries_by_state <- data %>% group_by(state) %>%
summarise(total=n(),
mean_age=round(mean(age, na.rm=TRUE))) %>%
inner_join(by=state_population) %>%
select(state, mean_age, total, POPESTIMATE2014,
POPEST18PLUS2014) %>%
mutate(pctg=(total/POPESTIMATE2014)*100) %>% arrange(pctg)
summaries_by_state <- data %>% group_by(state) %>%
summarise(total=n(),
mean_age=round(mean(age, na.rm=TRUE))) %>%
inner_join(state_population, by=state) %>%
select(state, mean_age, total, POPESTIMATE2014,
POPEST18PLUS2014) %>%
mutate(pctg=(total/POPESTIMATE2014)*100) %>% arrange(pctg)
summaries_by_state <- data %>% group_by(state) %>%
summarise(total=n(),
mean_age=round(mean(age, na.rm=TRUE))) %>%
inner_join(state_population) %>%
select(state, mean_age, total, POPESTIMATE2014,
POPEST18PLUS2014) %>%
mutate(pctg=(total/POPESTIMATE2014)*100) %>% arrange(pctg)
summaries_by_state <- data %>% group_by(state) %>%
summarise(total=n(),
mean_age=round(mean(age, na.rm=TRUE))) %>%
inner_join(state_population, by="state") %>%
select(state, mean_age, total, POPESTIMATE2014,
POPEST18PLUS2014) %>%
mutate(pctg=(total/POPESTIMATE2014)*100) %>% arrange(pctg)
state
data(state)
state.region
data(state)
str(state.region)
?state
summaries_by_state <- data %>% group_by(state) %>%
summarise(total=n(),
mean_age=round(mean(age, na.rm=TRUE))) %>%
inner_join(state_population, by="state") %>%
select(state, mean_age, total, POPESTIMATE2014,
POPEST18PLUS2014) %>%
mutate(pctg=(total/POPESTIMATE2014)*100) %>% arrange(state)
summaries_by_state <- data %>% group_by(state) %>%
summarise(total=n(),
mean_age=round(mean(age, na.rm=TRUE))) %>%
inner_join(state_population, by="state") %>%
select(state, mean_age, total, POPESTIMATE2014,
POPEST18PLUS2014) %>%
mutate(pctg=(total/POPESTIMATE2014)*100) %>% arrange(state)
summaries_by_state <- data %>% group_by(state) %>%
summarise(total=n(),
mean_age=round(mean(age, na.rm=TRUE))) %>%
inner_join(state_population, by="state") %>%
select(state, mean_age, total, POPESTIMATE2014,
POPEST18PLUS2014) %>%
mutate(pctg=(total/POPESTIMATE2014)*100) %>% arrange(state) %>% mutate(region=state.region)
View(summaries_by_state)
View(state.region)
state=as.factor(state.name[match(state, state.abb)]))
data <- killed_by_police %>% html_table(header=TRUE) %>%
.[[1]] %>%
setNames(columns) %>%
mutate(#first thing we have to do is split up columns w/multiple values
gender=unlist(lapply(strsplit(as.character(gender_race), "\\/"), "[", 1)),
race=unlist(lapply(strsplit(as.character(gender_race), "\\/"), "[", 2)),
name=unlist(lapply(strsplit(as.character(name_age), "\\,"), "[", 1)),
age=unlist(lapply(strsplit(as.character(name_age), "\\, "), "[", 2)),
first_name=unlist(lapply(strsplit(as.character(name), " "), "[", 1)),
#throw out some cruft from some strings
gender=substr(gender, 1, 1),
race=substr(race, 1, 1),
date=gsub("\\([^)]+) ", "", date),
#make a real date object
date=mdy(date),
age=as.numeric(substr(age, 1, 2)),#centegenerians will be turned into teens
gender=as.factor(gender),
race=as.factor(race),
first_name=as.factor(capitalize(tolower(first_name))),
decade=as.factor(age %% 10),
state=as.factor(state.name[match(state, state.abb)]))
View(data)
state_population <- read.csv("data/state_population.csv") %>%
filter(NAME %in% state.name)
summaries_by_state <- data %>% group_by(state) %>%
summarise(total=n(),
mean_age=round(mean(age, na.rm=TRUE))) %>%
inner_join(state_population, by="state") %>%
select(state, mean_age, total, POPESTIMATE2014,
POPEST18PLUS2014) %>%
mutate(pctg=(total/POPESTIMATE2014)*100) %>% arrange(state)
view(data)
View(data)
View(state_population)
?inner_join
summaries_by_state <- data %>% group_by(state) %>%
summarise(total=n(),
mean_age=round(mean(age, na.rm=TRUE))) %>%
inner_join(state_population, by=c("state", "name")) %>%
select(state, mean_age, total, POPESTIMATE2014,
POPEST18PLUS2014) %>%
mutate(pctg=(total/POPESTIMATE2014)*100) %>% arrange(state)
View(data)
View(state_population)
summaries_by_state <- data %>% group_by(state) %>%
summarise(total=n(),
mean_age=round(mean(age, na.rm=TRUE))) %>%
inner_join(state_population, by=c("state", "name"))
summaries_by_state <- data %>% group_by(state) %>%
summarise(total=n(),
mean_age=round(mean(age, na.rm=TRUE))) %>%
inner_join(state_population, by=c("state" = "NAME")) %>%
select(state, mean_age, total, POPESTIMATE2014,
POPEST18PLUS2014) %>%
mutate(pctg=(total/POPESTIMATE2014)*100) %>% arrange(state)
View(summaries_by_state)
ggplot(summaries_by_state, aes(x=state, y=pctg)) + geom_histogram()
ggplot(summaries_by_state, aes(x=state, y=pctg)) + geom_histogram(stat="identity")
summaries_by_state <- data %>% group_by(state) %>%
summarise(total=n(),
mean_age=round(mean(age, na.rm=TRUE))) %>%
inner_join(state_population, by=c("state" = "NAME")) %>%
select(state, mean_age, total, POPESTIMATE2014,
POPEST18PLUS2014) %>%
mutate(pctg=(total/POPESTIMATE2014)*100) %>% arrange(state)
summaries_by_state$region <- state.region
View(summaries_by_state)
summaries_by_state %>% group_by(region) %>% summarise(mean_pctg=mean(pctg))
summaries_by_state <- data %>% group_by(state) %>%
summarise(total=n(),
mean_age=round(mean(age, na.rm=TRUE))) %>%
inner_join(state_population, by=c("state" = "NAME")) %>%
select(state, mean_age, total, POPESTIMATE2014,
POPEST18PLUS2014) %>%
mutate(pctg=(total/POPESTIMATE2014)*100) %>%
arrange(state) %>%
mutate(region=state.region)
View(summaries_by_state)
summaries_by_state <- data %>% group_by(state, race) %>%
summarise(total=n(),
mean_age=round(mean(age, na.rm=TRUE))) %>%
inner_join(state_population, by=c("state" = "NAME")) %>%
select(state, race, mean_age, total, POPESTIMATE2014,
POPEST18PLUS2014) %>%
mutate(pctg=(total/POPESTIMATE2014)*100) %>%
arrange(state) %>%
mutate(region=state.region)
summaries_by_state <- data %>% group_by(state) %>%
summarise(total=n(),
mean_age=round(mean(age, na.rm=TRUE))) %>%
inner_join(state_population, by=c("state" = "NAME")) %>%
select(state, mean_age, total, POPESTIMATE2014,
POPEST18PLUS2014) %>%
mutate(pctg=(total/POPESTIMATE2014)*100) %>%
arrange(state) %>%
mutate(region=state.region)
summaries_by_state <- data %>% group_by(state, race) %>%
summarise(total=n(),
mean_age=round(mean(age, na.rm=TRUE)))
str(summaries_by_state)
summaries_by_state <- data %>% group_by(state, race) %>%
summarise(total=n(),
mean_age=round(mean(age, na.rm=TRUE))) %>%
inner_join(state_population, by=c("state" = "NAME"))
summaries_by_state <- data %>% group_by(state, race) %>%
summarise(total=n(),
mean_age=round(mean(age, na.rm=TRUE))) %>%
inner_join(state_population, by=c("state" = "NAME")) %>%
select(state, mean_age, total, POPESTIMATE2014,
POPEST18PLUS2014)
summaries_by_state <- data %>% group_by(state, race) %>%
summarise(total=n(),
mean_age=round(mean(age, na.rm=TRUE))) %>%
inner_join(state_population, by=c("state" = "NAME")) %>%
select(state, race, mean_age, total, POPESTIMATE2014,
POPEST18PLUS2014)
summaries_by_state <- data %>% group_by(state, race) %>%
summarise(total=n(),
mean_age=round(mean(age, na.rm=TRUE))) %>%
inner_join(state_population, by=c("state" = "NAME")) %>%
select(state, race, mean_age, total, POPESTIMATE2014,
POPEST18PLUS2014) %>%
mutate(pctg=(total/POPESTIMATE2014)*100)
summaries_by_state <- data %>% group_by(state, race) %>%
summarise(total=n(),
mean_age=round(mean(age, na.rm=TRUE))) %>%
inner_join(state_population, by=c("state" = "NAME")) %>%
select(state, race, mean_age, total, POPESTIMATE2014,
POPEST18PLUS2014) %>%
mutate(pctg=(total/POPESTIMATE2014)*100) %>%
arrange(state)
summaries_by_state$state %in% state.region
summaries_by_state$state %in% seq_along(state.region)
state.name[summaries_by_state$state]
state.name[summaries_by_state$state]
match(state.name[summaries_by_state$state], state.name)
state.region[match(state.name[summaries_by_state$state], state.name)]
summaries_by_state <- data %>% group_by(state, race) %>%
summarise(total=n(),
mean_age=round(mean(age, na.rm=TRUE))) %>%
inner_join(state_population, by=c("state" = "NAME")) %>%
select(state, race, mean_age, total, POPESTIMATE2014,
POPEST18PLUS2014) %>%
mutate(pctg=(total/POPESTIMATE2014)*100) %>%
arrange(state) %>%
mutate(region=state.region[match(state.name[state], state.name)])
summaries_by_state_and_race <- data %>% group_by(state, race) %>%
summarise(total=n(),
mean_age=round(mean(age, na.rm=TRUE))) %>%
inner_join(state_population, by=c("state" = "NAME")) %>%
select(state, race, mean_age, total, POPESTIMATE2014,
POPEST18PLUS2014) %>%
mutate(pctg=(total/POPESTIMATE2014)*100) %>%
arrange(state) %>%
mutate(region=state.region[match(state.name[state], state.name)])
View(summaries_by_state_and_race)
ggplot(summaries_by_state_and_race, aes(x=state, y=pctg)) + geom_histogram(stat="identity")
ggplot(summaries_by_state_and_race, aes(x=state, y=pctg)) + geom_histogram(stat="identity") + facet_wrap(~ race)
ggplot(summaries_by_state_and_race, aes(x=race, y=pctg)) + geom_histogram(stat="identity") + facet_wrap(~ state, guides="free")
ggplot(summaries_by_state_and_race, aes(x=race, y=pctg)) + geom_histogram(stat="identity") + facet_wrap(~ state, guide="free")
ggplot(summaries_by_state_and_race, aes(x=race, y=pctg)) + geom_histogram(stat="identity") + facet_wrap(~ state, scale=
"free")
?geom_histogram
ggplot(summaries_by_state_and_race[na.exclude(race)], aes(x=race, y=pctg)) + geom_histogram(stat="identity") + facet_wrap(~ state, scale="free")
summaries_by_state_and_race %>% filter(!is.na(race))
summaries_by_state_and_race %>% filter(!is.na(race)) -> with_race
View(with_race)
ggplot(with_race, aes(x=race, y=pctg)) + geom_histogram(stat="identity") + facet_wrap(~ state, scale="free")
ggplot(with_race, aes(x=race, y=pctg)) + geom_histogram(stat="identity") + facet_wrap(~ state, scale="free") + scale_x_discrete(drop=FALSE)
summaries_by_state <- data %>% group_by(state) %>%
summarise(total=n(),
mean_age=round(mean(age, na.rm=TRUE))) %>%
inner_join(state_population, by=c("state" = "NAME")) %>%
select(state, mean_age, total, POPESTIMATE2014,
POPEST18PLUS2014) %>%
mutate(pctg=(total/POPESTIMATE2014)*100) %>%
arrange(state) %>%
mutate(region=state.region)
ggplot(summaries_by_state, aes(map_id=state, fill=pctg)) + geom_map(map=states_map, colour="black")
??states_map
library(states)
library(maps)
install.packages("maps")
library(maps)
ggplot(summaries_by_state, aes(map_id=state, fill=pctg)) + geom_map(map=states_map, colour="black")
states_map <- map_data("state")
ggplot(summaries_by_state, aes(map_id=state, fill=pctg)) + geom_map(map=states_map, colour="black")
summaries_by_state
ggplot(summaries_by_state, aes(map_id=state, fill=pctg)) + geom_map(map=states_map, colour="black")
summaries_by_state$state
summaries_by_state <- data %>% group_by(state) %>%
summarise(total=n(),
mean_age=round(mean(age, na.rm=TRUE))) %>%
inner_join(state_population, by=c("state" = "NAME")) %>%
select(state, mean_age, total, POPESTIMATE2014,
POPEST18PLUS2014) %>%
mutate(pctg=(total/POPESTIMATE2014)*100) %>%
arrange(state) %>%
mutate(region=state.region,
state=tolower(state))
summary_map <- merge(states_map, summaries_by_state, by.x="region", by="state")
summaries_by_state <- data %>% group_by(state) %>%
summarise(total=n(),
mean_age=round(mean(age, na.rm=TRUE))) %>%
inner_join(state_population, by=c("state" = "NAME")) %>%
select(state, mean_age, total, POPESTIMATE2014,
POPEST18PLUS2014) %>%
mutate(pctg=(total/POPESTIMATE2014)*100) %>%
arrange(state) %>%
mutate(#region=state.region,
state=tolower(state))
summary_map <- merge(states_map, summaries_by_state, by.x="region", by="state")
summaries_by_state %>% inner_join(satates_map, by=c("region" = "state"))
summaries_by_state %>% inner_join(states_map, by=c("region" = "state"))
summaries_by_state %>% inner_join(states_map, by=c("state" = "region"))
summaries_by_state %>% inner_join(states_map, by=c("state" = "region")) %>% arrange(group, order)
pctg_map <- summaries_by_state %>%
inner_join(states_map, by=c("state" = "region")) %>%
arrange(group, order)
ggplot(pctg_map, aes(x=long, y=lat, group=group, fill=pctg)) +
geom_polygon(colour="black") +
coord_map("polyconic")
install.packages("mapproj")
ggplot(pctg_map, aes(x=long, y=lat, group=group, fill=pctg)) +
geom_polygon(colour="black") +
coord_map("polyconic")
ggplot(pctg_map, aes(x=long, y=lat, group=group, fill=pctg)) +
geom_polygon(colour="black") + scale_fill_gradient2(low="#559999", mid="grey90", high="#BB650B", midpoint=median(pctg_map$pctg))
coord_map("polyconic")
ggplot(pctg_map, aes(x=long, y=lat, group=group, fill=pctg)) +
geom_polygon(colour="black") + scale_fill_gradient2(low="#559999", mid="grey90", high="#BB650B", midpoint=median(pctg_map$pctg)) +
coord_map("polyconic")
killed_by_police <- html("data/index.tidy.html")
data <- killed_by_police %>% html_table(header=TRUE) %>%
.[[1]] %>%
setNames(columns) %>%
mutate(#first thing we have to do is split up columns w/multiple values
gender=unlist(lapply(strsplit(as.character(gender_race), "\\/"), "[", 1)),
race=unlist(lapply(strsplit(as.character(gender_race), "\\/"), "[", 2)),
name=unlist(lapply(strsplit(as.character(name_age), "\\,"), "[", 1)),
age=unlist(lapply(strsplit(as.character(name_age), "\\, "), "[", 2)),
first_name=unlist(lapply(strsplit(as.character(name), " "), "[", 1)),
#throw out some cruft from some strings
gender=substr(gender, 1, 1),
race=substr(race, 1, 1),
date=gsub("\\([^)]+) ", "", date),
#make a real date object
date=mdy(date),
age=as.numeric(substr(age, 1, 2)),#centegenerians will be turned into teens
gender=as.factor(gender),
race=as.factor(race),
first_name=as.factor(capitalize(tolower(first_name))),
decade=as.factor(age %% 10),
state=as.factor(state.name[match(state, state.abb)]))
write.csv(data, "data/cleaned.csv", row.names=FALSE)
state_population <- read.csv("data/state_population.csv") %>%
filter(NAME %in% state.name)
summaries_by_state <- data %>% group_by(state) %>%
summarise(total=n(),
mean_age=round(mean(age, na.rm=TRUE))) %>%
inner_join(state_population, by=c("state" = "NAME")) %>%
select(state, mean_age, total, POPESTIMATE2014,
POPEST18PLUS2014) %>%
mutate(pctg=(total/POPESTIMATE2014)*100) %>%
arrange(state) %>%
mutate(state=tolower(state))
write.csv(summaries_by_state, "data/summaries_by_state.csv", row.names=FALSE)
summaries_by_state_and_race <- data %>% group_by(state, race) %>%
summarise(total=n(),
mean_age=round(mean(age, na.rm=TRUE))) %>%
inner_join(state_population, by=c("state" = "NAME")) %>%
select(state, race, mean_age, total, POPESTIMATE2014,
POPEST18PLUS2014) %>%
mutate(pctg=(total/POPESTIMATE2014)*100) %>%
arrange(state) %>%
mutate(region=state.region[match(state.name[state], state.name)])
write.csv(summaries_by_state_and_race, "data/summaries_by_state_and_race.csv", row.names=FALSE)
pctg_map <- summaries_by_state %>%
inner_join(states_map, by=c("state" = "region")) %>%
arrange(group, order)
ggplot(pctg_map, aes(x=long, y=lat, group=group, fill=pctg)) +
geom_polygon(colour="black") +
scale_fill_gradient2(low="#559999", mid="grey90", high="#BB650B",
midpoint=median(pctg_map$pctg)) +
coord_map("polyconic")
data <- data %>% filter(date > ymd("2014/01/01"))
ggplot(data, aes(x=date)) + geom_density() + facet_wrap(~ race)
library(knitr)
knit2html("preliminary.Rmd")
library(knitr)
knit2html("preliminary.Rmd")
killed_by_police <- html("data/index.tidy.html")
